{"version":3,"file":"static/js/3428.7997c617.chunk.js","mappings":"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","sources":["modules/Apropos/AproposService.tsx","modules/Glossaire/GlossaireService.tsx","view/Glossaire/Header.tsx","view/Glossaire/styles/FilterStyles.tsx","view/Glossaire/shared/LoadingData.tsx","view/Glossaire/shared/NoDataFound.tsx","view/Glossaire/Filter.tsx","view/Glossaire/styles/GlossaireSection.tsx","view/Glossaire/GloassaireList.tsx","view/Glossaire/Glossaire.tsx","view/shared/Breadcrumb.tsx"],"sourcesContent":["import authAxios from \"src/modules/shared/axios/authAxios\";\r\nimport AuthCurrentTenant from \"src/modules/auth/authCurrentTenant\";\r\n\r\nexport default class AproposService {\r\n  static async getApropos() {\r\n    const tenantId = AuthCurrentTenant.get();\r\n    const response = await authAxios.get(`/tenant/${tenantId}/apropos`);\r\n    return response.data;\r\n  }\r\n  static async list(filter, orderBy, limit, offset) {\r\n    const params = {\r\n      filter,\r\n      orderBy,\r\n      limit,\r\n      offset,\r\n    };\r\n\r\n    const tenantId = AuthCurrentTenant.get();\r\n\r\n    const response = await authAxios.get(`/tenant/${tenantId}/apropos`, {\r\n      params,\r\n    });\r\n\r\n    return response.data;\r\n  }\r\n}\r\n","import authAxios from \"src/modules/shared/axios/authAxios\";\r\nimport AuthCurrentTenant from \"src/modules/auth/authCurrentTenant\";\r\n\r\nexport default class GlossaireService {\r\n  static async getGloassaireCategories() {\r\n    const tenantId = AuthCurrentTenant.get();\r\n    const response = await authAxios.get(\r\n      `/tenant/${tenantId}/category-glossaire`,\r\n      {}\r\n    );\r\n    return response.data;\r\n  }\r\n  // fetchin list of glossaire\r\n  static async getGloassaireList() {\r\n    const tenantId = AuthCurrentTenant.get();\r\n    const response = await authAxios.get(`/tenant/${tenantId}/glossaire`, {});\r\n    return response.data;\r\n  }\r\n  // GET ONE\r\n  static async getOneGloassaire(GLOSSAIRE_ID) {\r\n    const tenantId = AuthCurrentTenant.get();\r\n    const response = await authAxios.get(\r\n      `/tenant/${tenantId}/glossaire/${GLOSSAIRE_ID}`\r\n    );\r\n    return response.data;\r\n  }\r\n\r\n  static async getGloassaireById(id) {\r\n    const tenantId = AuthCurrentTenant.get();\r\n    const response = await authAxios.get(\r\n      `/tenant/${tenantId}/glossaire/${id}`,\r\n      {}\r\n    );\r\n    return response.data;\r\n  }\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport Breadcrumb from \"../shared/Breadcrumb\";\r\n\r\nimport styled from \"styled-components\";\r\nimport AproposService from \"src/modules/Apropos/AproposService\";\r\nimport { i18n } from \"src/i18n\";\r\n\r\nexport default function Header() {\r\n  const [glossaireDesc, setGlossaireDesc] = useState();\r\n  const langue = localStorage.getItem(\"language\");\r\n\r\n  useEffect(() => {\r\n    AproposService.list(\"\", \"\", \"\", \"\").then((res) => {\r\n      if (langue === \"fr\") {\r\n        setGlossaireDesc(res.rows[0].glossaireDescFR);\r\n      }\r\n      if (langue === \"ar\") {\r\n        setGlossaireDesc(res.rows[0].glossaireDescAR);\r\n      }\r\n      if (langue === \"en\") {\r\n        setGlossaireDesc(res.rows[0].glossaireDescEN);\r\n      }\r\n    });\r\n  }, []);\r\n  return (\r\n    <div>\r\n      <Breadcrumb\r\n        title={i18n(\"menu.Glossaire\")}\r\n        items={[[i18n(\"app.title\"), \"/\"], [i18n(\"menu.Glossaire\")]]}\r\n      />\r\n\r\n      {/* DESCRIPTION PLACEHOLDER */}\r\n      <DescriptionSection>\r\n        <p>{glossaireDesc}</p>\r\n      </DescriptionSection>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst DescriptionSection = styled.section`\r\n  color: var(--violet);\r\n  font-size: 1rem;\r\n  font-weight: 400;\r\n  margin: 1rem 0;\r\n  text-align: justify;\r\n`;\r\n","import styled from 'styled-components'\r\n\r\nconst FilterStyles = styled.section`\r\n  max-width: 1170px;\r\n  margin: 2rem 0;\r\n  font-size: 1rem;\r\n  background-color: #F1F1F1;\r\n  \r\n\r\n  .tabsHeader{\r\n    border-bottom: 1px solid #A3A3A9;\r\n\r\n    button{\r\n      padding: 1rem;\r\n      font-size: 1rem;\r\n      color: var(--gray3);\r\n      position: relative;\r\n    }\r\n    .active{\r\n      color: var(--violet);\r\n\r\n      &::after{\r\n        content: \"\";\r\n        display: block;\r\n        width: 70%;\r\n        height: 2px;\r\n        position: absolute;\r\n        left: 50%;\r\n        bottom: -2px;\r\n        transform: translateX(-50%);\r\n        background-color: red;\r\n        transition: .2s ease-in-out;\r\n      }\r\n    }\r\n  }\r\n\r\n  .tabContent{\r\n    padding: 1rem;\r\n    font-size: 1.4rem;\r\n    color: var(--violet);\r\n\r\n    .letterLinkFilter{\r\n      display: inline-block;\r\n      padding: .2rem .2rem;\r\n      font-weight: 700;\r\n      cursor: pointer;\r\n\r\n      &:hover{\r\n        color: red;\r\n      }\r\n    }\r\n\r\n    .categoryLink{\r\n      font-size: 1rem;\r\n      text-transform: uppercase;\r\n      cursor: pointer;\r\n      color: var(--violet);\r\n      background-color: #fff;\r\n      padding: .3rem .5rem;\r\n      margin: 0 .3rem;\r\n\r\n      &:hover{\r\n        color: red;\r\n      }\r\n    }\r\n  }\r\n`\r\n\r\nexport default FilterStyles\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\n// ICONS\r\nimport { MdOutlineHourglassEmpty } from 'react-icons/md'\r\n\r\n\r\nexport default function LoadingData() {\r\n    return (\r\n        <TabMessage>\r\n            <MdOutlineHourglassEmpty className='icon loadingIcon' />\r\n            <span>Chargement des données</span>\r\n        </TabMessage>\r\n    )\r\n}\r\n\r\nconst TabMessage = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n\r\n    .icon{\r\n        font-size: 2rem;\r\n        color: var(--violet);\r\n    }\r\n\r\n    .loadingIcon{\r\n        animation: spin infinite 2s ease-in-out;\r\n    }\r\n\r\n    span{\r\n        margin-top: 1rem;\r\n    }\r\n\r\n    @keyframes spin {\r\n        from {transform:rotate(0deg);}\r\n        to {transform:rotate(360deg);}\r\n    }\r\n`","import React from 'react'\r\nimport styled from 'styled-components'\r\n// ICONS\r\nimport { MdOutlineHourglassEmpty } from 'react-icons/md'\r\nimport { CgSmileNone } from 'react-icons/cg'\r\n\r\n\r\nexport default function NoDataFound() {\r\n    return (\r\n        <TabMessage>\r\n            <CgSmileNone className='icon' />\r\n            <span>Aucune donnée disponible</span>\r\n        </TabMessage>\r\n    )\r\n}\r\n\r\nconst TabMessage = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n\r\n    .icon{\r\n        font-size: 2rem;\r\n        color: var(--violet);\r\n    }\r\n\r\n    .loadingIcon{\r\n        animation: spin infinite 2s ease-in-out;\r\n    }\r\n\r\n    span{\r\n        margin-top: 1rem;\r\n    }\r\n`","import React, { useState, useEffect } from \"react\";\r\nimport FilterStyles from \"./styles/FilterStyles\";\r\nimport { Link } from \"react-scroll\";\r\nimport GlossaireService from \"src/modules/Glossaire/GlossaireService\";\r\n\r\n// COMPONENTS\r\nimport LoadingData from \"./shared/LoadingData\";\r\nimport NoDataFound from \"./shared/NoDataFound\";\r\nimport { i18n } from \"../../i18n\";\r\nexport default function Filter({ setGroupByCategory }) {\r\n  // current tab\r\n  const [activeTab, setActiveTab] = useState(true);\r\n  const toggleTabOnClick = (_) => {\r\n    setActiveTab((current) => !current);\r\n    setGroupByCategory(false);\r\n    if (activeTab) {\r\n      setGetCategoriesTrigger(true);\r\n      setGroupByCategory(true);\r\n    }\r\n  };\r\n  const langue = localStorage.getItem(\"language\");\r\n  // dummy letters array to use as links\r\n  const letters = [\r\n    \"A\",\r\n    \"B\",\r\n    \"C\",\r\n    \"D\",\r\n    \"E\",\r\n    \"F\",\r\n    \"G\",\r\n    \"H\",\r\n    \"I\",\r\n    \"J\",\r\n    \"K\",\r\n    \"L\",\r\n    \"M\",\r\n    \"N\",\r\n    \"O\",\r\n    \"P\",\r\n    \"Q\",\r\n    \"R\",\r\n    \"S\",\r\n    \"T\",\r\n    \"U\",\r\n    \"V\",\r\n    \"W\",\r\n    \"X\",\r\n    \"Y\",\r\n    \"Z\",\r\n  ];\r\n  const arabicLetters = [\r\n    \"أ\",\r\n    \"ب\",\r\n    \"ت\",\r\n    \"ث\",\r\n    \"ج\",\r\n    \"ح\",\r\n    \"خ\",\r\n    \"د\",\r\n    \"ذ\",\r\n    \"ر\",\r\n    \"ز\",\r\n    \"س\",\r\n    \"ش\",\r\n    \"ص\",\r\n    \"ض\",\r\n    \"ط\",\r\n    \"ظ\",\r\n    \"ع\",\r\n    \"غ\",\r\n    \"ف\",\r\n    \"ق\",\r\n    \"ك\",\r\n    \"ل\",\r\n    \"م\",\r\n    \"ن\",\r\n    \"ه\",\r\n    \"و\",\r\n    \"ي\",\r\n  ];\r\n  // Glossaire ccategories\r\n  const [glossaireCategories, setGlossaireCategories] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  // fetching category only if user switched tabs\r\n  const [getCategoriesTrigger, setGetCategoriesTrigger] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (getCategoriesTrigger) {\r\n      GlossaireService.getGloassaireCategories().then((res) => {\r\n        setGlossaireCategories(res.rows);\r\n        setIsLoading(false);\r\n      });\r\n    }\r\n  }, [getCategoriesTrigger]);\r\n\r\n  return (\r\n    <div>\r\n      {/* FILTER */}\r\n      <FilterStyles>\r\n        <div className='tabsHeader'>\r\n          <button\r\n            className={activeTab ? \"active\" : \"\"}\r\n            onClick={toggleTabOnClick}>\r\n            {i18n(\"common.lettre\")}\r\n          </button>\r\n          <button\r\n            className={!activeTab ? \"active\" : \"\"}\r\n            onClick={toggleTabOnClick}>\r\n            {i18n(\"common.category\")}\r\n          </button>\r\n        </div>\r\n        <div className='tabContent'>\r\n          {langue === \"ar\" ? (\r\n            <>\r\n              {activeTab && (\r\n                <div className='tab letterTab'>\r\n                  {arabicLetters.map((l) => {\r\n                    return (\r\n                      <Link\r\n                        to={l}\r\n                        smooth={true}\r\n                        duration={300}\r\n                        key={l}\r\n                        className='letterLinkFilter'>\r\n                        {l}\r\n                      </Link>\r\n                    );\r\n                  })}\r\n                </div>\r\n              )}\r\n            </>\r\n          ) : (\r\n            <>\r\n              {activeTab && (\r\n                <div className='tab letterTab'>\r\n                  {letters.map((l) => {\r\n                    return (\r\n                      <Link\r\n                        to={l}\r\n                        smooth={true}\r\n                        duration={300}\r\n                        key={l}\r\n                        className='letterLinkFilter'>\r\n                        {l.toUpperCase()}\r\n                      </Link>\r\n                    );\r\n                  })}\r\n                </div>\r\n              )}\r\n            </>\r\n          )}\r\n\r\n          {!activeTab && (\r\n            <div className='tab categoryTab'>\r\n              {!isLoading ? (\r\n                <div>\r\n                  {glossaireCategories.length ? (\r\n                    <section style={{ display: \"grid\" }}>\r\n                      {glossaireCategories.map((gc) => {\r\n                        return (\r\n                          <Link\r\n                            to={\r\n                              langue === \"fr\"\r\n                                ? gc[\"titleFR\"]\r\n                                : langue === \"ar\"\r\n                                ? gc[\"titleAR\"]\r\n                                : gc[\"titleEN\"]\r\n                            }\r\n                            smooth={true}\r\n                            duration={300}\r\n                            key={gc[\"id\"]}\r\n                            className='categoryLink'>\r\n                            {langue === \"fr\"\r\n                              ? gc[\"titleFR\"]\r\n                              : langue === \"ar\"\r\n                              ? gc[\"titleAR\"]\r\n                              : gc[\"titleEN\"]}\r\n                          </Link>\r\n                        );\r\n                      })}\r\n                    </section>\r\n                  ) : (\r\n                    <NoDataFound />\r\n                  )}\r\n                </div>\r\n              ) : (\r\n                <LoadingData />\r\n              )}\r\n            </div>\r\n          )}\r\n\r\n          {/* end of tab content */}\r\n        </div>\r\n      </FilterStyles>\r\n    </div>\r\n  );\r\n}\r\n","import styled from \"styled-components\";\r\n\r\nconst GlossaireSection = styled.section`\r\n  width: 100%;\r\n  padding: 1rem 0;\r\n\r\n  .sectionHeader {\r\n    span {\r\n      color: var(--violet);\r\n      font-size: 2rem;\r\n      font-weight: 700;\r\n\r\n            &:after{\r\n                content: '';\r\n                display: block;\r\n                width: 100%;\r\n                height: 1px;\r\n                background-color: red;\r\n                margin: 1rem 0;\r\n            }\r\n        }\r\n    }\r\n  }\r\n\r\n  .sectionBody {\r\n    .glossaireLink {\r\n      display: block;\r\n      width: auto;\r\n      height: 30px;\r\n      padding: 0.4rem 0;\r\n      margin: 1rem 0;\r\n\r\n      text-align: left;\r\n      font-weight: 600;\r\n      font-size: 1rem;\r\n\r\n      background-color: transparent;\r\n      border: none;\r\n      color: var(--violet);\r\n\r\n      &:hover {\r\n        color: red;\r\n        border-bottom: 1px solid red;\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport default GlossaireSection;\r\n","import React, { useState } from \"react\";\r\nimport GlossaireSection from \"./styles/GlossaireSection\";\r\nimport _ from \"lodash\";\r\n// MODAL\r\nimport { Link } from \"react-router-dom\";\r\n\r\n// PACKAGES\r\nvar arraySort = require(\"array-sort\");\r\nvar groupArray = require(\"group-array\");\r\n\r\nexport default function GloassaireList({ data, criteria }) {\r\n  // HELPER FUNCTION(S)\r\n  const initial = (text) => {\r\n    return _.capitalize(text?.substring(0, 1));\r\n  };\r\n\r\n  // ### LETTER TAB LOGIC ###\r\n  let arrayOfData: any[] = [];\r\n  const langue = localStorage.getItem(\"language\");\r\n\r\n  if (criteria === \"letter\") {\r\n    if (langue === \"fr\") {\r\n      data.forEach((GLOSSOBJECT) => {\r\n        arrayOfData.push({\r\n          letter: initial(GLOSSOBJECT.nomFR),\r\n          data: GLOSSOBJECT,\r\n        });\r\n      });\r\n      arrayOfData = groupArray(arraySort(arrayOfData, \"letter\"), \"letter\");\r\n    } else if (langue === \"en\") {\r\n      data.forEach((GLOSSOBJECT) => {\r\n        arrayOfData.push({\r\n          letter: initial(GLOSSOBJECT.nomEN),\r\n          data: GLOSSOBJECT,\r\n        });\r\n      });\r\n      arrayOfData = groupArray(arraySort(arrayOfData, \"letter\"), \"letter\");\r\n    }\r\n    if (langue === \"ar\") {\r\n      data.forEach((GLOSSOBJECT) => {\r\n        arrayOfData.push({\r\n          letter: initial(GLOSSOBJECT.nomAR),\r\n          data: GLOSSOBJECT,\r\n        });\r\n      });\r\n      arrayOfData = groupArray(arraySort(arrayOfData, \"letter\"), \"letter\");\r\n    }\r\n  }\r\n  const initialsList: any = Object.keys(arrayOfData);\r\n\r\n  // ### CATEGORY TAB LOGIC ###\r\n  const categoriesList: any = Object.keys(data);\r\n  const [isShowing, setIsShowing] = useState(false);\r\n\r\n  // Modal.setAppElement(\"#root\");\r\n  const [modalData, setModalData] = useState([\r\n    {\r\n      nomFR: \"\",\r\n      nomAR: \"\",\r\n      nomEN: \"\",\r\n      definitionFR: \"\",\r\n      definitionAR: \"\",\r\n      definitionEN: \"\",\r\n      categorie: { titleFR: \"\", titleAR: \"\", titleEN: \"\" },\r\n    },\r\n  ]);\r\n  const [modalDataLetter, setModalDataLetter] = useState([\r\n    {\r\n      data: {\r\n        nomFR: \"\",\r\n        nomAR: \"\",\r\n        nomEN: \"\",\r\n        definitionFR: \"\",\r\n        definitionAR: \"\",\r\n        definitionEN: \"\",\r\n        categorie: { titleFR: \"\", titleAR: \"\", titleEN: \"\" },\r\n      },\r\n    },\r\n  ]);\r\n  const handleClick = (CAT, ID) => {\r\n    setIsShowing(true);\r\n    if (criteria === \"category\") {\r\n      const modalData = data[CAT].filter((glossaireObject) => {\r\n        return glossaireObject.id === ID;\r\n      });\r\n      if (modalData.length > 0) {\r\n        setModalData(modalData);\r\n      }\r\n    } else {\r\n      const modalDataLetter = arrayOfData[CAT].filter((glossaireObject) => {\r\n        return glossaireObject.data._id === ID;\r\n      });\r\n      if (modalDataLetter.length > 0) {\r\n        setModalDataLetter(modalDataLetter);\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {/* LIST OF ENTRIES */}\r\n      <section className='listOfEntries'>\r\n        {\r\n          // ============ CATEGORY TAB ============\r\n          criteria === \"category\" && (\r\n            <div>\r\n              {categoriesList.map((CAT) => {\r\n                const glossList = data[CAT];\r\n                return (\r\n                  <GlossaireSection key={CAT} id={CAT}>\r\n                    <div className='sectionHeader'>\r\n                      <span>{CAT}</span>\r\n                    </div>\r\n                    <section className='sectionBody'>\r\n                      {glossList.map((GLOSS) => {\r\n                        return (\r\n                          <Link to={\"/Glossaire/\" + GLOSS._id}>\r\n                            <section key={GLOSS.id}>\r\n                              <button\r\n                                className='glossaireLink'\r\n                                onClick={() => {}}>\r\n                                {langue === \"fr\"\r\n                                  ? GLOSS.nomFR\r\n                                  : langue === \"ar\"\r\n                                  ? GLOSS.nomAR\r\n                                  : GLOSS.nomEN}\r\n                              </button>\r\n                            </section>\r\n                          </Link>\r\n                        );\r\n                      })}\r\n                    </section>\r\n                  </GlossaireSection>\r\n                );\r\n              })}\r\n            </div>\r\n          )\r\n        }\r\n\r\n        {/* RENDERING DATA BASED ON FILTER */}\r\n\r\n        {\r\n          // ============ LETTER TAB ============\r\n          criteria !== \"category\" && (\r\n            <div>\r\n              {initialsList.map((GLOSSAIREINITIAL) => {\r\n                const glossList = arrayOfData[GLOSSAIREINITIAL];\r\n                return (\r\n                  <GlossaireSection\r\n                    key={GLOSSAIREINITIAL}\r\n                    id={GLOSSAIREINITIAL}>\r\n                    <div className='sectionHeader'>\r\n                      <span>{GLOSSAIREINITIAL}</span>\r\n                    </div>\r\n                    <section className='sectionBody'>\r\n                      {glossList.map((ENTRY) => {\r\n                        return (\r\n                          <Link to={\"/Glossaire/\" + ENTRY.data._id}>\r\n                            <section key={ENTRY.data.id}>\r\n                              <button\r\n                                className='glossaireLink'\r\n                                onClick={() =>\r\n                                  handleClick(GLOSSAIREINITIAL, ENTRY.data.id)\r\n                                }>\r\n                                {langue === \"fr\"\r\n                                  ? ENTRY.data.nomFR\r\n                                  : langue === \"ar\"\r\n                                  ? ENTRY.data.nomAR\r\n                                  : ENTRY.data.nomEN}\r\n                              </button>\r\n                            </section>\r\n                          </Link>\r\n                        );\r\n                      })}\r\n                    </section>\r\n                  </GlossaireSection>\r\n                );\r\n              })}\r\n            </div>\r\n          )\r\n        }\r\n      </section>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport GlossaireService from \"src/modules/Glossaire/GlossaireService\";\r\n\r\n// COMPONENTS\r\nimport Header from \"./Header\";\r\nimport Filter from \"./Filter\";\r\nimport GloassaireList from \"./GloassaireList\";\r\nimport LoadingData from \"./shared/LoadingData\";\r\nimport NoDataFound from \"./shared/NoDataFound\";\r\nimport Footer from \"../Layout/CopyWrite\";\r\n\r\n// Packages\r\nvar groupArray = require(\"group-array\");\r\n\r\nfunction Glossaire() {\r\n\t// state to hold a copy of the glossaire list (with all data)\r\n\tconst [glossaireList, setGlossaireList] = useState([]);\r\n\tconst [isLoading, setIsLoading] = useState(true);\r\n\tconst langue = localStorage.getItem(\"language\");\r\n\t// FETCHING initial data from DB\r\n\tconst getGlossaire = () => {\r\n\t\tGlossaireService.getGloassaireList().then((gl) => {\r\n\t\t\tsetGlossaireList(gl.rows);\r\n\t\t\tsetIsLoading(false);\r\n\t\t});\r\n\t};\r\n\tuseEffect(() => {\r\n\t\tgetGlossaire();\r\n\t}, []);\r\n\r\n\t// passing grouped data (category)\r\n\tconst [groupByCategory, setGroupByCategory] = useState(false);\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<GlossaireLayout>\r\n\t\t\t\t<Header />\r\n\t\t\t\t<Filter setGroupByCategory={setGroupByCategory} />\r\n\t\t\t\t{isLoading ? (\r\n\t\t\t\t\t<LoadingData />\r\n\t\t\t\t) : (\r\n\t\t\t\t\t<section>\r\n\t\t\t\t\t\t{!glossaireList.length ? (\r\n\t\t\t\t\t\t\t<NoDataFound />\r\n\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t{groupByCategory ? (\r\n\t\t\t\t\t\t\t\t\t<GloassaireList\r\n\t\t\t\t\t\t\t\t\t\tdata={\r\n\t\t\t\t\t\t\t\t\t\t\tlangue === \"fr\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t? groupArray(glossaireList, \"categorie.titleFR\")\r\n\t\t\t\t\t\t\t\t\t\t\t\t: langue === \"ar\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t? groupArray(glossaireList, \"categorie.titleAR\")\r\n\t\t\t\t\t\t\t\t\t\t\t\t: groupArray(glossaireList, \"categorie.titleEN\")\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\tcriteria=\"category\"\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t\t<GloassaireList data={glossaireList} criteria=\"letter\" />\r\n\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t</section>\r\n\t\t\t\t)}\r\n\t\t\t</GlossaireLayout>\r\n\t\t</>\r\n\t);\r\n}\r\n\r\nexport default Glossaire;\r\n\r\nconst GlossaireLayout = styled.section`\r\n\tmax-width: 1170px;\r\n\tmargin: 2rem auto;\r\n\r\n\tfont-family: \"Proxima Nova\";\r\n\tfont-style: normal;\r\n\r\n\t@media screen and (max-width: 1071px) {\r\n\t\tpadding: 0 10px;\r\n\t\tmargin: 160px auto 0 auto;\r\n\t}\r\n`;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\n\r\nconst BreadcrumbNav = styled.div`\r\n\tmargin: 28px 0 10px 0;\r\n\t.breadcrumb {\r\n\t\twidth: 100%;\r\n\t\tmargin: 0;\r\n\t\tpadding: 0;\r\n\t\tbackground-color: transparent;\r\n\t}\r\n\tol {\r\n\t\tdisplay: flex;\r\n\t}\r\n\tli {\r\n\t\tfont-family: \"Proxima Nova\";\r\n\t\tfont-style: normal;\r\n\t\tfont-weight: 400;\r\n\t\tfont-size: 14px;\r\n\t\tline-height: 25px;\r\n\t}\r\n\t.breadcrump__nav {\r\n\t\tmargin: auto;\r\n\t\tleft: 0;\r\n\t\tdisplay: flex;\r\n\t\tmax-width: 1170px;\r\n\t\tflex-direction: column;\r\n\t}\r\n\r\n\t.breadcrumb-item:not(.active) a {\r\n\t\tcolor: rgba(0, 0, 0, 0.45);\r\n\t}\r\n\r\n\th2 {\r\n\t\tfont-family: \"Bebas Neue Pro\";\r\n\t\tfont-style: normal;\r\n\t\tfont-weight: 700;\r\n\t\tfont-size: 47px;\r\n\t\tline-height: 39px;\r\n\t}\r\n`;\r\n\r\nfunction Breadcrumb(props) {\r\n\tconst isLink = (item) => {\r\n\t\treturn item.length > 1;\r\n\t};\r\n\treturn (\r\n\t\t<BreadcrumbNav>\r\n\t\t\t<div className=\"breadcrump__nav\">\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<h2>{props.title}</h2>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<ol className=\"breadcrumb\">\r\n\t\t\t\t\t\t{props.items.map((item, index) => (\r\n\t\t\t\t\t\t\t<li\r\n\t\t\t\t\t\t\t\tkey={item[0]}\r\n\t\t\t\t\t\t\t\tclassName={`breadcrumb-item ${\r\n\t\t\t\t\t\t\t\t\tprops.items.length - 1 === index ? \"active\" : \"\"\r\n\t\t\t\t\t\t\t\t}`}>\r\n\t\t\t\t\t\t\t\t{isLink(item) ? (\r\n\t\t\t\t\t\t\t\t\t<Link to={item[1]}>\r\n\t\t\t\t\t\t\t\t\t\t{\" \"}\r\n\t\t\t\t\t\t\t\t\t\t{item[0]} {item[1]}\r\n\t\t\t\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t\titem[0]\r\n\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t))}\r\n\t\t\t\t\t</ol>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</BreadcrumbNav>\r\n\t);\r\n}\r\n\r\nexport default Breadcrumb;\r\n"],"names":["AproposService","tenantId","AuthCurrentTenant","authAxios","response","data","filter","orderBy","limit","offset","params","GlossaireService","GLOSSAIRE_ID","id","Header","useState","glossaireDesc","setGlossaireDesc","langue","localStorage","getItem","useEffect","then","res","rows","glossaireDescFR","glossaireDescAR","glossaireDescEN","Breadcrumb","title","i18n","items","DescriptionSection","styled","LoadingData","TabMessage","className","NoDataFound","Filter","setGroupByCategory","activeTab","setActiveTab","toggleTabOnClick","_","current","setGetCategoriesTrigger","glossaireCategories","setGlossaireCategories","isLoading","setIsLoading","getCategoriesTrigger","onClick","map","l","to","smooth","duration","toUpperCase","length","style","display","gc","arraySort","require","groupArray","GloassaireList","criteria","initial","text","substring","arrayOfData","forEach","GLOSSOBJECT","push","letter","nomFR","nomEN","nomAR","initialsList","Object","keys","categoriesList","setIsShowing","definitionFR","definitionAR","definitionEN","categorie","titleFR","titleAR","titleEN","setModalData","setModalDataLetter","CAT","glossList","GLOSS","_id","GLOSSAIREINITIAL","ENTRY","ID","modalData","glossaireObject","modalDataLetter","handleClick","glossaireList","setGlossaireList","gl","groupByCategory","GlossaireLayout","BreadcrumbNav","props","isLink","item","index"],"sourceRoot":""}