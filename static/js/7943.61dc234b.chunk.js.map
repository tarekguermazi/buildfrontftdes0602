{"version":3,"file":"static/js/7943.61dc234b.chunk.js","mappings":"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","sources":["modules/Glossaire/GlossaireService.tsx","view/Glossaire/ViewDetails.tsx","view/shared/Breadcrumb.tsx","../node_modules/react-loading-skeleton/dist/index.mjs"],"sourcesContent":["import authAxios from \"src/modules/shared/axios/authAxios\";\r\nimport AuthCurrentTenant from \"src/modules/auth/authCurrentTenant\";\r\n\r\nexport default class GlossaireService {\r\n  static async getGloassaireCategories() {\r\n    const tenantId = AuthCurrentTenant.get();\r\n    const response = await authAxios.get(\r\n      `/tenant/${tenantId}/category-glossaire`,\r\n      {}\r\n    );\r\n    return response.data;\r\n  }\r\n  // fetchin list of glossaire\r\n  static async getGloassaireList() {\r\n    const tenantId = AuthCurrentTenant.get();\r\n    const response = await authAxios.get(`/tenant/${tenantId}/glossaire`, {});\r\n    return response.data;\r\n  }\r\n  // GET ONE\r\n  static async getOneGloassaire(GLOSSAIRE_ID) {\r\n    const tenantId = AuthCurrentTenant.get();\r\n    const response = await authAxios.get(\r\n      `/tenant/${tenantId}/glossaire/${GLOSSAIRE_ID}`\r\n    );\r\n    return response.data;\r\n  }\r\n\r\n  static async getGloassaireById(id) {\r\n    const tenantId = AuthCurrentTenant.get();\r\n    const response = await authAxios.get(\r\n      `/tenant/${tenantId}/glossaire/${id}`,\r\n      {}\r\n    );\r\n    return response.data;\r\n  }\r\n}\r\n","import moment from \"moment\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { BsFacebook, BsTwitter, BsInstagram, BsLinkedin } from \"react-icons/bs\";\r\nimport Skeleton from \"react-loading-skeleton\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { i18n } from \"src/i18n\";\r\nimport GlossaireService from \"src/modules/Glossaire/GlossaireService\";\r\nimport TenantService from \"src/modules/Tenant/TenantService\";\r\nimport styled from \"styled-components\";\r\nimport Breadcrumb from \"../shared/Breadcrumb\";\r\n\r\nexport default function ViewDetails() {\r\n\tconst params = useParams();\r\n\tlet entityID = params.id;\r\n\tconst langue = localStorage.getItem(\"language\");\r\n\r\n\t// FETCH DETAILS OF THAT ONE ENETITY\r\n\tconst [entity, setEntity] = useState({});\r\n\tconst [entityIsLoading, setEntityIsLoading] = useState(true);\r\n\r\n\tconst fetchTypeEntitYDetails = (entityID) => {\r\n\t\tGlossaireService.getGloassaireById(entityID).then((value) => {\r\n\t\t\tsetEntity((entity) => ({ ...entity, ...value }));\r\n\t\t\tsetEntityIsLoading(false);\r\n\r\n\t\t\t// fetching user's data once entity is loaded\r\n\t\t\tTenantService.getTenant(value.tenant).then((userDetails) => {});\r\n\t\t});\r\n\t};\r\n\r\n\tuseEffect(() => {\r\n\t\tfetchTypeEntitYDetails(entityID);\r\n\t}, []);\r\n\r\n\treturn (\r\n\t\t<section>\r\n\t\t\t<section className=\"wideContent\">\r\n\t\t\t\t<MainLayout>\r\n\t\t\t\t\t<section className=\"rightSection\">\r\n\t\t\t\t\t\t{entityIsLoading ? (\r\n\t\t\t\t\t\t\t<Skeleton height={500} />\r\n\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t<div className=\"cardContent\">\r\n\t\t\t\t\t\t\t\t{langue === \"fr\" ? (\r\n\t\t\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t\t\t<Breadcrumb title={entity[\"nomFR\"]} items={[]} />\r\n\t\t\t\t\t\t\t\t\t\t<div className=\"cardHeader\">\r\n\t\t\t\t\t\t\t\t\t\t\t{entity[\"categorie\"] ? (\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"categoryBadge\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t{entity[\"categorie\"][\"titleFR\"]}\r\n\t\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t\t\t) : null}\r\n\t\t\t\t\t\t\t\t\t\t\t{entity[\"thematique\"] ? (\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"categoryBadgeTheme\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t{entity[\"thematique\"][\"titleFR\"]}\r\n\t\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t\t\t) : null}\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t\t\t<br />\r\n\r\n\t\t\t\t\t\t\t\t\t\t<span>{entity[\"abreviationFR\"]}</span>\r\n\t\t\t\t\t\t\t\t\t\t<br />\r\n\r\n\t\t\t\t\t\t\t\t\t\t<div className=\"cardContent\">{entity[\"definitionFR\"]}</div>\r\n\t\t\t\t\t\t\t\t\t\t<br />\r\n\t\t\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t\t\t) : langue === \"ar\" ? (\r\n\t\t\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t\t\t<Breadcrumb title={entity[\"nomAR\"]} items={[]} />\r\n\t\t\t\t\t\t\t\t\t\t<div className=\"cardHeader\">\r\n\t\t\t\t\t\t\t\t\t\t\t{entity[\"categorie\"] ? (\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"categoryBadge\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t{entity[\"categorie\"][\"titleAR\"]}\r\n\t\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t\t\t) : null}\r\n\t\t\t\t\t\t\t\t\t\t\t{entity[\"thematique\"] ? (\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"categoryBadgeTheme\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t{entity[\"thematique\"][\"titleAR\"]}\r\n\t\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t\t\t) : null}\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t\t\t<br />\r\n\r\n\t\t\t\t\t\t\t\t\t\t<span>{entity[\"abreviationAR\"]}</span>\r\n\t\t\t\t\t\t\t\t\t\t<br />\r\n\r\n\t\t\t\t\t\t\t\t\t\t<div className=\"cardContent\">{entity[\"definitionAR\"]}</div>\r\n\t\t\t\t\t\t\t\t\t\t<br />\r\n\t\t\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t\t\t<Breadcrumb title={entity[\"nomEN\"]} items={[]} />\r\n\t\t\t\t\t\t\t\t\t\t<div className=\"cardHeader\">\r\n\t\t\t\t\t\t\t\t\t\t\t{entity[\"categorie\"] ? (\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"categoryBadge\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t{entity[\"categorie\"][\"titleEN\"]}\r\n\t\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t\t\t) : null}\r\n\t\t\t\t\t\t\t\t\t\t\t{entity[\"thematique\"] ? (\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"categoryBadgeTheme\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t{entity[\"thematique\"][\"titleEN\"]}\r\n\t\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t\t\t) : null}\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t\t\t<br />\r\n\r\n\t\t\t\t\t\t\t\t\t\t<span>{entity[\"abreviationEN\"]}</span>\r\n\t\t\t\t\t\t\t\t\t\t<br />\r\n\r\n\t\t\t\t\t\t\t\t\t\t<div className=\"cardContent\">{entity[\"definitionEN\"]}</div>\r\n\t\t\t\t\t\t\t\t\t\t<br />\r\n\t\t\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t</section>\r\n\t\t\t\t</MainLayout>\r\n\t\t\t\t{/* <RelatedContent type={entity[\"categorie\"]} /> */}\r\n\t\t\t</section>\r\n\t\t</section>\r\n\t);\r\n}\r\n\r\nconst MainLayout = styled.section`\r\n  // width: var(--cerntered-content);\r\n  height: auto;\r\n  display: flex;\r\n  align-items: flex-start;\r\n  justify-content: space-between;\r\n  // margin: 1rem auto;\r\n  max-width: 100%;\r\n  margin: 2rem auto;\r\n\r\n  @media (max-width : 1171px){ \r\n    margin : 150px 10px 20px 10px;\r\n    \r\n  }\r\n\r\n  p{\r\n    font-size: 1rem;\r\n    line-height: 1.5;\r\n    color: var(--violet);\r\n    text-align: justify;\r\n    margin-bottom: 2rem;\r\n  }\r\n    .rightSection{\r\n        width: 100%;\r\n        /* margin-right: 2.5rem; */\r\n\r\n        .socials{\r\n            width: 250px;\r\n            display: flex;\r\n            justify-content: space-between;\r\n            align-items: center;\r\n\r\n      button {\r\n        background-color: transparent;\r\n        border-radius: 50%;\r\n        color: var(--violet);\r\n        font-size: 1.8rem;\r\n      }\r\n    }\r\n\r\n    @media (max-width: 767px){\r\n        width: 100%; \r\n    }\r\n    .cardContent {\r\n      font-size: 1rem;\r\n      line-height: 1.5;\r\n      color: var(--violet);\r\n      text-align: justify;\r\n      margin-bottom: 2rem;\r\n      font-family: \"Proxima Nova\";\r\n    \r\n        .cardHeader {\r\n          width: 100%;\r\n          display: flex;\r\n          justify-content: space-between;\r\n          font-size: 12px;\r\n          font-family: \"Proxima Nova\";\r\n    \r\n          .categoryBadge {\r\n            background: #f8d7da;\r\n            border-radius: 3px;\r\n            color: var(--dark--red);\r\n            padding: 0.4rem 0.5rem;\r\n            font-size: 12px;\r\n            font-family: \"Proxima Nova\";\r\n          }\r\n          .categoryBadgeTheme {\r\n            background: #d7f8de;\r\n            border-radius: 3px;\r\n            color: #00380c;\r\n            padding: 0.4rem 0.5rem;\r\n            font-size: 12px;\r\n            font-family: \"Proxima Nova\";\r\n          }\r\n        }\r\n        .titre {\r\n            color: var(--gray3);\r\n        }\r\n        .title {\r\n          margin-top: 1.5rem;\r\n          color: var(--violet);\r\n    \r\n          span {\r\n            font-family: \"Proxima Nova\";\r\n            // font-family: \"Bebas Neue Pro\";\r\n            font-style: normal;\r\n            font-weight: 700;\r\n            font-size: 23px;\r\n            line-height: 24px;\r\n          }\r\n        }\r\n      }\r\n`;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\n\r\nconst BreadcrumbNav = styled.div`\r\n\tmargin: 28px 0 10px 0;\r\n\t.breadcrumb {\r\n\t\twidth: 100%;\r\n\t\tmargin: 0;\r\n\t\tpadding: 0;\r\n\t\tbackground-color: transparent;\r\n\t}\r\n\tol {\r\n\t\tdisplay: flex;\r\n\t}\r\n\tli {\r\n\t\tfont-family: \"Proxima Nova\";\r\n\t\tfont-style: normal;\r\n\t\tfont-weight: 400;\r\n\t\tfont-size: 14px;\r\n\t\tline-height: 25px;\r\n\t}\r\n\t.breadcrump__nav {\r\n\t\tmargin: auto;\r\n\t\tleft: 0;\r\n\t\tdisplay: flex;\r\n\t\tmax-width: 1170px;\r\n\t\tflex-direction: column;\r\n\t}\r\n\r\n\t.breadcrumb-item:not(.active) a {\r\n\t\tcolor: rgba(0, 0, 0, 0.45);\r\n\t}\r\n\r\n\th2 {\r\n\t\tfont-family: \"Bebas Neue Pro\";\r\n\t\tfont-style: normal;\r\n\t\tfont-weight: 700;\r\n\t\tfont-size: 47px;\r\n\t\tline-height: 39px;\r\n\t}\r\n`;\r\n\r\nfunction Breadcrumb(props) {\r\n\tconst isLink = (item) => {\r\n\t\treturn item.length > 1;\r\n\t};\r\n\treturn (\r\n\t\t<BreadcrumbNav>\r\n\t\t\t<div className=\"breadcrump__nav\">\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<h2>{props.title}</h2>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<ol className=\"breadcrumb\">\r\n\t\t\t\t\t\t{props.items.map((item, index) => (\r\n\t\t\t\t\t\t\t<li\r\n\t\t\t\t\t\t\t\tkey={item[0]}\r\n\t\t\t\t\t\t\t\tclassName={`breadcrumb-item ${\r\n\t\t\t\t\t\t\t\t\tprops.items.length - 1 === index ? \"active\" : \"\"\r\n\t\t\t\t\t\t\t\t}`}>\r\n\t\t\t\t\t\t\t\t{isLink(item) ? (\r\n\t\t\t\t\t\t\t\t\t<Link to={item[1]}>\r\n\t\t\t\t\t\t\t\t\t\t{\" \"}\r\n\t\t\t\t\t\t\t\t\t\t{item[0]} {item[1]}\r\n\t\t\t\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t\titem[0]\r\n\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t))}\r\n\t\t\t\t\t</ol>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</BreadcrumbNav>\r\n\t);\r\n}\r\n\r\nexport default Breadcrumb;\r\n","import React from 'react';\n\n/**\n * @internal\n */\nconst SkeletonThemeContext = React.createContext({});\n\n/* eslint-disable react/no-array-index-key */\nconst defaultEnableAnimation = true;\n// For performance & cleanliness, don't add any inline styles unless we have to\nfunction styleOptionsToCssProperties({ baseColor, highlightColor, width, height, borderRadius, circle, direction, duration, enableAnimation = defaultEnableAnimation, }) {\n    const style = {};\n    if (direction === 'rtl')\n        style['--animation-direction'] = 'reverse';\n    if (typeof duration === 'number')\n        style['--animation-duration'] = `${duration}s`;\n    if (!enableAnimation)\n        style['--pseudo-element-display'] = 'none';\n    if (typeof width === 'string' || typeof width === 'number')\n        style.width = width;\n    if (typeof height === 'string' || typeof height === 'number')\n        style.height = height;\n    if (typeof borderRadius === 'string' || typeof borderRadius === 'number')\n        style.borderRadius = borderRadius;\n    if (circle)\n        style.borderRadius = '50%';\n    if (typeof baseColor !== 'undefined')\n        style['--base-color'] = baseColor;\n    if (typeof highlightColor !== 'undefined')\n        style['--highlight-color'] = highlightColor;\n    return style;\n}\nfunction Skeleton({ count = 1, wrapper: Wrapper, className: customClassName, containerClassName, containerTestId, circle = false, style: styleProp, ...originalPropsStyleOptions }) {\n    var _a, _b, _c;\n    const contextStyleOptions = React.useContext(SkeletonThemeContext);\n    const propsStyleOptions = { ...originalPropsStyleOptions };\n    // DO NOT overwrite style options from the context if `propsStyleOptions`\n    // has properties explicity set to undefined\n    for (const [key, value] of Object.entries(originalPropsStyleOptions)) {\n        if (typeof value === 'undefined') {\n            delete propsStyleOptions[key];\n        }\n    }\n    // Props take priority over context\n    const styleOptions = {\n        ...contextStyleOptions,\n        ...propsStyleOptions,\n        circle,\n    };\n    // `styleProp` has the least priority out of everything\n    const style = {\n        ...styleProp,\n        ...styleOptionsToCssProperties(styleOptions),\n    };\n    let className = 'react-loading-skeleton';\n    if (customClassName)\n        className += ` ${customClassName}`;\n    const inline = (_a = styleOptions.inline) !== null && _a !== void 0 ? _a : false;\n    const elements = [];\n    const countCeil = Math.ceil(count);\n    for (let i = 0; i < countCeil; i++) {\n        let thisStyle = style;\n        if (countCeil > count && i === countCeil - 1) {\n            // count is not an integer and we've reached the last iteration of\n            // the loop, so add a \"fractional\" skeleton.\n            //\n            // For example, if count is 3.5, we've already added 3 full\n            // skeletons, so now we add one more skeleton that is 0.5 times the\n            // original width.\n            const width = (_b = thisStyle.width) !== null && _b !== void 0 ? _b : '100%'; // 100% is the default since that's what's in the CSS\n            const fractionalPart = count % 1;\n            const fractionalWidth = typeof width === 'number'\n                ? width * fractionalPart\n                : `calc(${width} * ${fractionalPart})`;\n            thisStyle = { ...thisStyle, width: fractionalWidth };\n        }\n        const skeletonSpan = (React.createElement(\"span\", { className: className, style: thisStyle, key: i }, \"\\u200C\"));\n        if (inline) {\n            elements.push(skeletonSpan);\n        }\n        else {\n            // Without the <br />, the skeleton lines will all run together if\n            // `width` is specified\n            elements.push(React.createElement(React.Fragment, { key: i },\n                skeletonSpan,\n                React.createElement(\"br\", null)));\n        }\n    }\n    return (React.createElement(\"span\", { className: containerClassName, \"data-testid\": containerTestId, \"aria-live\": \"polite\", \"aria-busy\": (_c = styleOptions.enableAnimation) !== null && _c !== void 0 ? _c : defaultEnableAnimation }, Wrapper\n        ? elements.map((el, i) => React.createElement(Wrapper, { key: i }, el))\n        : elements));\n}\n\nfunction SkeletonTheme({ children, ...styleOptions }) {\n    return (React.createElement(SkeletonThemeContext.Provider, { value: styleOptions }, children));\n}\n\nexport { SkeletonTheme, Skeleton as default };\n"],"names":["GlossaireService","tenantId","AuthCurrentTenant","authAxios","response","data","GLOSSAIRE_ID","id","ViewDetails","entityID","useParams","langue","localStorage","getItem","useState","entity","setEntity","entityIsLoading","setEntityIsLoading","useEffect","then","value","TenantService","tenant","userDetails","fetchTypeEntitYDetails","className","MainLayout","height","title","items","styled","BreadcrumbNav","props","isLink","item","length","map","index","to","SkeletonThemeContext","React","defaultEnableAnimation","Skeleton","_a","_b","_c","count","Wrapper","wrapper","customClassName","containerClassName","containerTestId","circle","styleProp","style","originalPropsStyleOptions","contextStyleOptions","propsStyleOptions","Object","entries","key","styleOptions","baseColor","highlightColor","width","borderRadius","direction","duration","enableAnimation","styleOptionsToCssProperties","inline","elements","countCeil","Math","ceil","i","thisStyle","fractionalPart","fractionalWidth","skeletonSpan","push","el"],"sourceRoot":""}